# ------------LIBRERIAS----------------

import streamlit as st
import matplotlib as plt
import numpy as np
import pandas as pd
import seaborn as sns
import plotly_express as px
import requests
import folium
from folium.plugins import FastMarkerCluster
from streamlit_folium import st_folium
import leafmap.foliumap as leafmap
import plotly.graph_objects as go


# ----------CONFIGURACI√ìN DE LA P√ÅGINA----------

st.set_page_config(page_title ="Madrid", layout = "centered")


# ----------DATAFRAME--------------

df = pd.read_csv("airbnb_anuncios.csv")


# -----------PREPROCESAMIENTO DATAFRAME-------------

df.drop(["name","id","host_name","last_review"], axis = 1, inplace = True)
df["reviews_per_month"].fillna(0, inplace = True)


# --------------APP----------------

# Utilizo este comando para cambiar el color de diferentes lugares de la p√°gina y el icono a pie de p√°gina.
st.markdown(
    """
    <style>
    .stApp {
        background-color: #ebd8d8
    }
    .css-6qob1r {
        background-color: #77224e
    }
    .st-ck{
        background-color: transparent
    }
    .css-18ni7ap {
        background-color: transparent
    }
    .st-ax {
        background-color: 
    }
    .css-629wbf {
        background-color: transparent
    }
    .css-1x8cf1d {
        background-color: transparent
    }

    
    footer {visibility: hidden;}
    footer:hover,  footer:active {
        color: #ffffff;
        background-color: transparent; 
    }
    footer:after {
        content:'üêà‚Äç‚¨õ'; 
        visibility: visible;
        display: block;
        position: relative;
        padding: 5px;
        top: 2px;
    }
    
    </style>
    """,
    unsafe_allow_html=True
)

# SIDEBAR

# Pongo la informaci√≥n de sidebar empleando codigo latex para poner el color del texto.
st.sidebar.markdown("$\color{#ffffff}{Autor:}$")
st.sidebar.markdown("$\color{#ffffff}{√Ångel\hspace{2mm}Pastor\hspace{2mm}S√°nchez}$")
st.sidebar.markdown("$\color{#ffffff}{Fecha:}$")
st.sidebar.markdown("$\color{#ffffff}{30/01/2023}$")
st.sidebar.write("-----")
directorio = ["Portada", "Informaci√≥n", "Proyecto", "Gr√°ficos y an√°lisis"]
seleccionar_direccion = st.sidebar.selectbox("$\color{#ffffff}{¬øQu√©\hspace{2mm}quieres\hspace{2mm}ver?}$", directorio)
if st.sidebar.button("*"):
    st.balloons()


# CUERPO CENTRAL
# P√°gina de portada.
if seleccionar_direccion == "Portada":
    st.markdown("# **MADRID**")
    st.image("https://www.barnes-madrid.com/images/titres_personnalises/-titre-aze4T.jpg")
    st.caption("barnes-madrid.com")


# P√°gina de informaci√≥n.
if seleccionar_direccion == "Informaci√≥n":

    # Establezco un t√≠tulo como encabezado de la p√°gina.
    st.title("Un vistazo a la ciudad")
    st.image("https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Avenida_de_Monforte_de_Lemos_%28Madrid%29_06.jpg/1920px-Avenida_de_Monforte_de_Lemos_%28Madrid%29_06.jpg")
    st.caption("wikipedia.com")
    # Texto introductorio.
    st.header("Informaci√≥n")
    st.write("""Madrid es un municipio espa√±ol, con categor√≠a de villa, adem√°s de ser la capital del Estado. Su termino municipal es el m√°s 
                poblado de Espa√±a y es la segunda ciudad m√°s poblada de Europa. Es un influyente centro cultural y cuenta con museos de referencia
                internacional. Los or√≠genes de la ciudad son objeto de revisi√≥n hist√≥rica tras los diferentes hallazgos realizados, pero quedando 
                claro que diferentes pueblos se asentaron en Madrid.""")
    st.header("Qu√© ver en Madrid")
    st.write("""Madrid es una de las ciudades m√°s visitadas de nuestro pa√≠s. Esto se debe a que es una ciudad realmente atractiva, cargada 
                de lugares para visitar, con una amplia oferta cultural y de ocio.""")
    # Secci√≥n Gran V√≠a.
    st.subheader("La Gran V√≠a")
    st.image("https://www.elplural.com/uploads/s1/27/20/4/granvia-0.jpeg")
    st.caption("elplural.com")
    st.write("""Es una de las calles m√°s transitadas de la capital. En ella encontrar√°s lugares emblem√°ticos, cines y teatros, adem√°s de tiendas 
                de cadenas de ropa. Disfruta de ella con calma, con la mochila por delante, y mirando hacia arriba para ver sus edificios y curiosidades.""")
    # Secci√≥n Museo del Prado.
    st.subheader("Museo del Prado")
    st.image("https://artemisialatenebrista.com/wp-content/uploads/2020/11/Fusilamiento-de-Torrijos-y-sus-companeros-en-las-playas-de-Malaga-copia-copia-7-1024x277.jpg")
    st.caption("@AntonioGisbert")
    st.write("""Fundado a principios del siglo XIX, el museo del prado es una de las pinacotecas m√°s importantes y visitadas del mundo, con una colecci√≥n 
                que ronda las 1700 obras, entre las que se incluyen obras de Velazquez, Goya o El Bosco entre otros. """)
    # Secci√≥n Parque del Retiro.
    st.subheader("Parque del Retiro")
    st.image("https://pequeviajes.com/wp-content/uploads/2018/12/parque-del-retiro.jpg")
    st.caption("pequeviajes.com")
    st.write("""El Retiro es el parque p√∫blico m√°s emblem√°tico de Madrid. Un lugar ideal para dar un agradable paseo mientras descubres los bellos 
                rincones que guarda. Considerado como una de las principales atracciones turisticas de la ciudad, all√≠ podr√°s encontrar el Palacio 
                de Cristal, la escultura del √Ångel Ca√≠do, el Parterre o el Estanque Grande.""")
    # Secci√≥n teatros y musicales.
    st.subheader("Teatros y musicales")
    st.image("https://decoratel.com/wp-content/uploads/2019/04/distribucion-de-butacas-teatro-lope-de-vega-de-madrid-1024x505.jpg")
    st.caption("decoratel.com")
    st.write("""Madrid cuenta con la mayor oferta de teatros y musicales de Espa√±a, entre los que destaca el ya m√≠tico El rey le√≥n. Especialmente conocida en 
                este √°mbito es la Gran Via, conocida como el Broadway madrile√±o por la cantidad de musicales que all√≠ se pueden disfrutar.""")
    st.subheader("Y un largo etc√©tera...")
    st.write("----")
    # Fuentes enlazadas de donde he obtenido la informaci√≥n.
    st.markdown("Fuentes:")
    st.markdown("""[sitiosdeespa√±a.es](https://www.sitiosdeespana.es/articulo/que-ver-y-hacer-en-madrid-33-cosas-que-no-debes-pederte)""")
    st.markdown("""[Wikipedia](https://es.wikipedia.org/wiki/Madrid)""")


# P√°gina de proyecto.
if seleccionar_direccion == "Proyecto":

    # Establezco un t√≠tulo como encabezado de la p√°gina.

    st.title("Proyecto")

    # Dise√±o la p√°gina.
        # Introduzco texto para indicar el preprocesamiento realizado.
    cantidad = df.value_counts().sum()
    st.write("____")
    st.write("""El ejercicio final del m√≥dulo 2 consiste en estudiar la problem√°tica de los pisos de alquiler en la ciudad de Madrid.
                La realizaci√≥n del proyecto ha constado de los siguientes pasos:\n\n -Importaci√≥n de librer√≠as necesarias (numpy, 
                pandas, plotly_express, etc.).\n\n -Lectura del archivo de trabajo. \n\n -Limpieza del dataset. \n\n -√Ånalisis y 
                realizaci√≥n de gr√°ficos.\n\n La limpieza del dataset se ha realizado siguiendo las recomendaciones del enunciado y ha 
                consistido en la eliminaci√≥n de las columnas 'name', 'id', 'host_name', 'last_review' y en la sustituci√≥n de los 
                valores nulos de la columna 'reviews_per_month' por el valor 0. Una vez realizado este paso he comprobado la informaci√≥n 
                resultante y he comenzado con el an√°lisis y la realizaci√≥n de gr√°ficos. M√°s adelante se puede ver el dataset 
                una vez procesado e informaci√≥n relacionada con la media, percentiles, m√°ximos y m√≠nimos, etc.""")
    

    # Inserto el dataframe utilizando un bot√≥n para ello.

    if st.button ("Dataframe", disabled=False, type = "secondary"):
        st.dataframe(df)
    st.write("----")

    if st.button ("Informaci√≥n de los datos", disabled = False, type = "secondary"):
        st.table(df.describe())
    st.write("-----")
    

# P√°gina de gr√°ficos.
if seleccionar_direccion == "Gr√°ficos y an√°lisis":    

    # Doy t√≠tulo a la p√°gina.

    st.title("Gr√°ficos y an√°lisis")

    # Creo pesta√±as para los diferentes gr√°ficos.

    tabs = st.tabs(["Correlaciones",
                    "Alojamientos",
                    "Disponibilidad",
                    "Localizaci√≥n"
                    ])

    # Creo todas las gr√°ficas.

    # Gr√°ficas de la primera pesta√±a.
    tab_plot = tabs[0] 
    # Mapa de calor con las correlaciones.
    with tab_plot:
        grafico0 = px.imshow(df.corr(), text_auto = True, title = "Gr√°fico de correlaciones", zmin = -1, zmax = 1, color_continuous_scale = 'rdbu',width=800, height=800)
        grafico0.update_layout(overwrite=True)
        grafico0.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.2,
        sizex=1.9,
        sizey=1.5,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico0)
        st.write("----")
        st.write("""Se observa que, al igual que ocurria con los datos de otras ciudades, no existe gran correlaci√≥n entre ninguna de las variables de 
                    de estudio, con la exepci√≥n del n√∫mero de reviews y las reviews por mes, que llegan a tener una correlaci√≥n cercana al 70%. Curiosamente, 
                    el precio no guarda especial correlaci√≥n con nada.""")

    # Gr√°ficas de la segunda pesta√±a.
    tab_plot = tabs[1] 
    # Histograma de alojamientos por distrito.
    with tab_plot:
        # Total alojamientos.
        alojamientos_total = df["neighbourhood_group"].value_counts().sum()
        # Alojamientos distrito centro.
        alojamientos_centro = df[df["neighbourhood_group"] == "Centro"].value_counts().sum()
        # Histograma.
        grafico1 = px.histogram(df, x ="neighbourhood_group", color = "neighbourhood_group", title = "Alojamientos por distrito", labels = {"neighbourhood_group":"Distritos"}, width=800, height=600)
        grafico1.update_layout(showlegend=False)
        grafico1.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.3,
        sizex=1.9,
        sizey=1.8,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico1)
        st.write("----")
        st.write(f"""En el histograma anterior se puede observar la disponibilidad de alojamientos por distrito. El distrito Centro tiene {alojamientos_centro} 
                    alojamientos disponibles de los {alojamientos_total} totales, muchos m√°s que el resto de distritos, que apenas sobrepasan los mil en algunos casos, y no llegan a ellos en otros. 
                    Esto se debe a que el distrito Centro es la zona m√°s turistica y concurrida de la ciudad, lo que confirmar√≠a la hip√≥tesis de partida de que muchos
                    propietarios privados encuentran m√°s rentable alquilar a turistas.""")
        st.write("----")
    
    with tab_plot:
        # Histograma de alojamientos por barrio.
        grafico2 = px.histogram(df, x ="neighbourhood", color = "neighbourhood", title = "Alojamientos por barrio", labels = {"neighbourhood":"Barrios"}, width=800, height=600)
        grafico2.update_layout(showlegend=False)
        grafico2.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.4,
        sizex=1.9,
        sizey=2.1,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico2)
        st.write("----")
        st.write("""Por barrios, los que cuentan con m√°s alojamientos son aquellos que pertenecen al distrito centro, como cabr√≠a esperar. Entre ellos, el que
                    tiene m√°s alojamientos es Embajadores, con m√°s de 2500, seguido de Universidad, que apenas llega a los dos mil. El resto de barrios no llegan 
                    en ning√∫n caso a los 500 alojamientos disponibles.""")
        st.write("----")
    
    with tab_plot:
        # Histograma de tipos de alojamientos.
        grafico3 = px.histogram(df, x ="room_type", color = "room_type", title = "Tipos de alojamientos", labels = {"room_type":"Tipos"}, width=800, height=600, color_discrete_sequence=px.colors.qualitative.Pastel)
        grafico3.update_layout(showlegend=False)
        grafico3.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.3,
        sizex=1.9,
        sizey=1.7,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico3)
        st.write("----")
        st.write("""En cuanto a tipos de alojamientos ocurre como en todos los casos estudiados con anterioridad, la mayor√≠a de alojamientos son casas o apartamentos 
                    completos, m√°s de doce mil. Le siguen, por n√∫mero de alojamientos, habitaciones privadas, con m√°s de siete mil. El resto de tipos tienen valores 
                    residuales.""")
        st.write("----")
    
    # Gr√°ficas de la tercera pesta√±a.
    tab_plot = tabs[2]
    # Gr√°fico de caja de disponibilidad por distrito.
    with tab_plot:
        grafico4 = px.box(df, x = "neighbourhood_group", y = "availability_365", title = "Disponibilidad por distrito", color = "neighbourhood_group", width=800, height=600)
        grafico4.update_layout(showlegend=False)
        grafico4.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.3,
        sizex=1.9,
        sizey=1.6,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico4)
        st.write("----")
        st.write("""En este gr√°fico podemos observar la disponibilidad media por distrito. El rango intercuart√≠lico q3-q1, es decir, el 50% de la disponibilidad 
                    diaria anual est√° comprendida dentro de la caja. Los bigotes indican la variabilidad fuera de los cuartiles superior e inferior, que puede ir 
                    desde 0 dias al a√±o, hasta 65.""")
        st.write("----")
    
    # Gr√°ficas de la tercera pesta√±a.
    tab_plot = tabs[3]
    with tab_plot:
        # Mapa con la localizaci√≥n de los alojamientos en los diferentes distritos.
        grafico5 = px.scatter_mapbox(df, lat='latitude', lon='longitude', color='neighbourhood_group', title = "Alojamientos por distrito", zoom=10, width = 800, height = 600)
        grafico5.update_layout(mapbox_style='open-street-map')
        grafico5.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.3,
        sizex=1.9,
        sizey=1.6,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico5)
        st.write("----")
        st.write("""Los mapas indican la localizaci√≥n geogr√°fica de los alojamientos sobre un plano de la ciudad. Sin hacer zoom tendr√≠an poca utilidad porque no 
                    permiten ver la localizaci√≥n exacta. Sin embargo, podr√≠an ser utiles para ver la densidad de alomientos por distrito o una representaci√≥n 
                    sobre el mapa de la localizaci√≥n de los diferentes distritos. As√≠, podr√≠amos ver como la densidad es mayor en distrito Centro. Aun as√≠, para 
                    esto hay mejores gr√°ficos, como los vistos en el apartado anterior.""")
        st.write("----")
    
    with tab_plot:
        # Mapa con la localizaci√≥n de los alojamientos en los diferentes barrios.
        grafico6 = px.scatter_mapbox(df, lat='latitude', lon='longitude', color='neighbourhood', title = "Alojamientos por barrio",zoom=10, width = 800, height = 600)
        grafico6.update_layout(mapbox_style='open-street-map')
        grafico6.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.3,
        sizex=1.9,
        sizey=1.6,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico6)
        st.write("----")
        st.write("""C√≥mo en el gr√°fico anterior, en este podemos observar la localizaci√≥n de los alojamientos por barrio sobre un plano de la ciudad. Podemos ver 
                    en el c√≥mo la mayor aglomeraci√≥n de alojamientos se encuentra en los barrios del distrito Centro. Si ampliamo, adem√°s, podemos ver la 
                    localizaci√≥n exacta.""")
        st.write("----")

    with tab_plot:
        # Mapa con la localizaci√≥n de los diferentes tipos de alojamientos.
        grafico7 = px.scatter_mapbox(df, lat='latitude', lon='longitude', color='room_type', title = "Tipos de alojamientos",zoom=10, width = 800, height = 600, color_discrete_sequence=px.colors.qualitative.Bold)
        grafico7.update_layout(mapbox_style='open-street-map')
        grafico7.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.3,
        sizex=1.9,
        sizey=1.6,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico7)
        st.write("----")
        st.write("""Se puede apreciar la localizaci√≥n de los diferentes tipos de alojamiento en la ciudad. En el mapa se ve una mayor densidad de alojamientos 
                    de tipo casa entera, habitaciones compartidas y habitaciones de hotel en la zona centro y habitaciones privadas distribuida principalmente 
                    por la periferia. Sin embargo, sospecho que en el gr√°fico se produce cierto solapamiento.""")
        st.write("----")
    
    with tab_plot:
        # Mapa con la disponibilidad de los alojamientos.
        grafico8 = px.scatter_mapbox(df, lat='latitude', lon='longitude', color='availability_365', title = "Disponibilidad de alojamientos",zoom=10, width = 800, height = 600)
        grafico8.update_layout(mapbox_style='open-street-map')
        grafico8.add_layout_image(go.layout.Image(
        source="https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Gran_V%C3%ADa_%28Madrid%29_1.jpg/1200px-Gran_V%C3%ADa_%28Madrid%29_1.jpg",
        x=-0.4,
        y=1.3,
        sizex=1.9,
        sizey=1.6,
        sizing='stretch',
        opacity=0.2,
        layer='below'
        ))
        st.plotly_chart(grafico8)
        st.write("----")
        st.write("""En este mapa se aprecia la localizaci√≥n de los alojamientos por su disponibilidad y c√≥mo esta se distribuye de forma uniforme por toda la ciudad.""")
        st.write("----")
